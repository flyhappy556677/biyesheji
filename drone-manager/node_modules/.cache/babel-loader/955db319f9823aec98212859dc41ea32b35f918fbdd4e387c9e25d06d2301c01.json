{"ast":null,"code":"export default {\n  name: \"Person\",\n  data() {\n    return {\n      form: {},\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\n    };\n  },\n  created() {\n    this.getUser();\n  },\n  methods: {\n    async getUser() {\n      let res = this.request.get(\"/user/username/\" + this.user.username);\n      this.form = res.data;\n      return res.data;\n    },\n    save() {\n      this.request.post(\"/user\", this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"保存成功\");\n          //更新浏览器存储的用户信息\n          let user = this.getUser();\n          user.token = JSON.parse(localStorage.getItem(\"user\")).token;\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      });\n    },\n    handleAvatarSuccess(res) {\n      this.form.avatarUrl = res;\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","user","localStorage","getItem","JSON","parse","created","getUser","methods","res","request","get","username","save","post","then","code","$message","success","token","setItem","stringify","error","handleAvatarSuccess","avatarUrl"],"sources":["src/views/Person.vue"],"sourcesContent":["<template>\r\n  <el-card style=\"width:500px;padding: 20px; \">\r\n    <el-form label-width=\"80px\" size=\"smail\">\r\n\r\n      <el-upload\r\n          style=\"text-align: center; padding-bottom: 10px\"\r\n          class=\"avatar-uploader\"\r\n          action=\"http://localhost:9090/file/upload\"\r\n          :show-file-list=\"false\"\r\n          :on-success=\"handleAvatarSuccess\"\r\n          :before-upload=\"beforeAvatarUpload\">\r\n        <img v-if=\"form.avatarUrl\" :src=\"form.avatarUrl\" class=\"avatar\">\r\n        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n      </el-upload>\r\n\r\n      <el-form-item label=\"用户名\">\r\n        <el-input v-model=\"form.username\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"昵称\">\r\n        <el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\">\r\n        <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"电话\">\r\n        <el-input v-model=\"form.phone\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"地址\">\r\n        <el-input v-model=\"form.address\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n          <el-button type=\"primary\"  @click=\"save\">提交</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n\r\n<script >\r\nexport  default {\r\n  name: \"Person\",\r\n  data() {\r\n    return {\r\n      form: {},\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\r\n    }\r\n  },\r\n  created() {\r\n    this.getUser()\r\n  },\r\n  methods: {\r\n    async getUser() {\r\n      let res = this.request.get(\"/user/username/\" + this.user.username)\r\n      this.form = res.data\r\n      return res.data\r\n    }\r\n  ,\r\n  save() {\r\n    this.request.post(\"/user\", this.form).then(res => {\r\n      if (res.code === '200') {\r\n        this.$message.success(\"保存成功\")\r\n        //更新浏览器存储的用户信息\r\n        let user = this.getUser()\r\n        user.token = JSON.parse(localStorage.getItem(\"user\")).token\r\n        localStorage.setItem(\"user\", JSON.stringify(user))\r\n      } else {\r\n        this.$message.error(\"保存失败\")\r\n      }\r\n      })\r\n    },\r\n    handleAvatarSuccess(res) {\r\n      this.form.avatarUrl = res\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 138px;\r\n  height: 138px;\r\n  line-height: 138px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 138px;\r\n  height: 138px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":"AAuCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACA,MAAAD,QAAA;MACA,IAAAE,GAAA,QAAAC,OAAA,CAAAC,GAAA,0BAAAV,IAAA,CAAAW,QAAA;MACA,KAAAZ,IAAA,GAAAS,GAAA,CAAAV,IAAA;MACA,OAAAU,GAAA,CAAAV,IAAA;IACA;IAEAc,KAAA;MACA,KAAAH,OAAA,CAAAI,IAAA,eAAAd,IAAA,EAAAe,IAAA,CAAAN,GAAA;QACA,IAAAA,GAAA,CAAAO,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA;UACA,IAAAjB,IAAA,QAAAM,OAAA;UACAN,IAAA,CAAAkB,KAAA,GAAAf,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA,UAAAgB,KAAA;UACAjB,YAAA,CAAAkB,OAAA,SAAAhB,IAAA,CAAAiB,SAAA,CAAApB,IAAA;QACA;UACA,KAAAgB,QAAA,CAAAK,KAAA;QACA;MACA;IACA;IACAC,oBAAAd,GAAA;MACA,KAAAT,IAAA,CAAAwB,SAAA,GAAAf,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}