{"ast":null,"code":"import mapLoader from '@/utils/gaode';\nexport default {\n  mounted() {\n    this.createMap();\n  },\n  data() {\n    return {\n      AMap: null,\n      map: null,\n      width: 1000,\n      // 地图宽度\n      height: 600,\n      // 地图高度\n      plugins: ['AMap.Scale' /*比例尺*/, 'AMap.ToolBar' /*工具栏*/, 'AMap.Marker' /*标记*/, 'AMap.Geolocation' /*定位*/, 'AMap.MapType' /*图层切换*/],\n      // 地图插件\n      config: {\n        resizeEnable: true,\n        // 地图初始化时定位到当前城市(会被center覆盖)\n        // center: [], // 地图中心点\n        zoom: 10,\n        //设置地图的缩放级别\n        mapStyle: 'amap://styles/normal' //设置地图的显示样式\n      } // 地图配置项\n    };\n  },\n  methods: {\n    // 初始化地图\n    async createMap() {\n      try {\n        this.AMap = await mapLoader(this.plugins);\n        this.map = new AMap.Map('container', this.config);\n        //异步加载插件\n        this.asnycLoaderPlugins(this.AMap, this.map, this.plugins);\n        getMessageByDrawCircle(this.AMap, this.map);\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    //异步同时加载多个插件\n    asnycLoaderPlugins(AMap, map, plugins) {\n      AMap.plugin(plugins, function () {\n        map.addControl(new AMap.Scale()); // 添加比例尺\n        map.addControl(new AMap.ToolBar()); // 添加工具栏\n        map.addControl(new AMap.MapType()); // 添加图层切换\n        // map.add(\n        //   new AMap.Marker({\n        //     position: map.getCenter(),\n        //     content: '<div style=\"fontSize:16px\">1</div>' // 自定义点标记覆盖物内容\n        //   })\n        // ); // 添加标记\n        // 高精度定位\n        highAccuracyGeolocation(AMap, map);\n        // 添加圆形覆盖物\n        // map.add(\n        //   new AMap.Circle({\n        //     center: map.getCenter(), // 圆心位置\n        //     radius: 1000, // 圆半径\n        //     fillColor: 'red', // 圆形填充颜色\n        //     strokeColor: '#fff', // 描边颜色\n        //     strokeWeight: 2 // 描边宽度\n        //   })\n        // );\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapLoader","mounted","createMap","data","AMap","map","width","height","plugins","config","resizeEnable","zoom","mapStyle","methods","Map","asnycLoaderPlugins","getMessageByDrawCircle","e","console","log","plugin","addControl","Scale","ToolBar","MapType","highAccuracyGeolocation"],"sources":["src/views/Map.vue"],"sourcesContent":["<template>\r\n  <div >\r\n    <!-- 放置地图的容器 -->\r\n    <div id=\"container\" :style=\"{ width: width + 'px', height: height + 'px' }\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mapLoader from '@/utils/gaode';\r\n\r\nexport default {\r\n  mounted() {\r\n    this.createMap();\r\n  },\r\n  data() {\r\n    return {\r\n      AMap: null,\r\n      map: null,\r\n      width: 1000, // 地图宽度\r\n      height: 600, // 地图高度\r\n      plugins: [\r\n        'AMap.Scale' /*比例尺*/,\r\n        'AMap.ToolBar' /*工具栏*/,\r\n        'AMap.Marker' /*标记*/,\r\n        'AMap.Geolocation' /*定位*/,\r\n        'AMap.MapType' /*图层切换*/\r\n      ], // 地图插件\r\n      config: {\r\n        resizeEnable: true, // 地图初始化时定位到当前城市(会被center覆盖)\r\n        // center: [], // 地图中心点\r\n        zoom: 10, //设置地图的缩放级别\r\n        mapStyle: 'amap://styles/normal' //设置地图的显示样式\r\n      } // 地图配置项\r\n    };\r\n  },\r\n  methods: {\r\n    // 初始化地图\r\n    async createMap() {\r\n      try {\r\n        this.AMap = await mapLoader(this.plugins);\r\n        this.map = new AMap.Map('container', this.config);\r\n        //异步加载插件\r\n        this.asnycLoaderPlugins(this.AMap, this.map, this.plugins);\r\n        getMessageByDrawCircle(this.AMap, this.map);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n    //异步同时加载多个插件\r\n    asnycLoaderPlugins(AMap, map, plugins) {\r\n      AMap.plugin(plugins, function () {\r\n        map.addControl(new AMap.Scale()); // 添加比例尺\r\n        map.addControl(new AMap.ToolBar()); // 添加工具栏\r\n        map.addControl(new AMap.MapType()); // 添加图层切换\r\n        // map.add(\r\n        //   new AMap.Marker({\r\n        //     position: map.getCenter(),\r\n        //     content: '<div style=\"fontSize:16px\">1</div>' // 自定义点标记覆盖物内容\r\n        //   })\r\n        // ); // 添加标记\r\n        // 高精度定位\r\n        highAccuracyGeolocation(AMap, map);\r\n        // 添加圆形覆盖物\r\n        // map.add(\r\n        //   new AMap.Circle({\r\n        //     center: map.getCenter(), // 圆心位置\r\n        //     radius: 1000, // 圆半径\r\n        //     fillColor: 'red', // 圆形填充颜色\r\n        //     strokeColor: '#fff', // 描边颜色\r\n        //     strokeWeight: 2 // 描边宽度\r\n        //   })\r\n        // );\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" module>\r\n.root {\r\n  width: 1920px;\r\n  height: 1080px;\r\n}\r\n</style>\r\n"],"mappings":"AAQA,OAAAA,SAAA;AAEA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,GAAA;MACAC,KAAA;MAAA;MACAC,MAAA;MAAA;MACAC,OAAA,GACA,sBACA,wBACA,sBACA,2BACA,wBACA;MAAA;MACAC,MAAA;QACAC,YAAA;QAAA;QACA;QACAC,IAAA;QAAA;QACAC,QAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;IACA,MAAAX,UAAA;MACA;QACA,KAAAE,IAAA,SAAAJ,SAAA,MAAAQ,OAAA;QACA,KAAAH,GAAA,OAAAD,IAAA,CAAAU,GAAA,mBAAAL,MAAA;QACA;QACA,KAAAM,kBAAA,MAAAX,IAAA,OAAAC,GAAA,OAAAG,OAAA;QACAQ,sBAAA,MAAAZ,IAAA,OAAAC,GAAA;MACA,SAAAY,CAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,CAAA;MACA;IACA;IACA;IACAF,mBAAAX,IAAA,EAAAC,GAAA,EAAAG,OAAA;MACAJ,IAAA,CAAAgB,MAAA,CAAAZ,OAAA;QACAH,GAAA,CAAAgB,UAAA,KAAAjB,IAAA,CAAAkB,KAAA;QACAjB,GAAA,CAAAgB,UAAA,KAAAjB,IAAA,CAAAmB,OAAA;QACAlB,GAAA,CAAAgB,UAAA,KAAAjB,IAAA,CAAAoB,OAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAC,uBAAA,CAAArB,IAAA,EAAAC,GAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}