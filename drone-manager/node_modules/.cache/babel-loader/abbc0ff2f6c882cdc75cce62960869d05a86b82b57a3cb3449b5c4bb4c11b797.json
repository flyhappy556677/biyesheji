{"ast":null,"code":"import AMapLoader from \"@amap/amap-jsapi-loader\";\nexport default {\n  name: \"map-view\",\n  data() {\n    return {\n      searchKeyword: \"\",\n      // 用于存储搜索关键字\n      map: null,\n      // 地图对象\n      placeSearch: null // 地点搜索对象\n    };\n  },\n  mounted() {\n    this.initAMap();\n  },\n  unmounted() {\n    this.map?.destroy();\n  },\n  methods: {\n    async initAMap() {\n      const {\n        default: AMapLoader\n      } = await import(\"@amap/amap-jsapi-loader\");\n      AMapLoader.load({\n        key: \"f34b8d5f4cbdb16a9f986dcb3b35da8a\",\n        version: \"2.0\",\n        plugins: [\"AMap.PlaceSearch\"]\n      }).then(AMap => {\n        this.map = new AMap.Map(\"container\", {\n          resizeEnable: true\n        });\n\n        // 初始化地点搜索对象\n        this.placeSearch = new AMap.PlaceSearch({\n          pageSize: 5,\n          pageIndex: 1,\n          city: \"全国\",\n          // 可以设置为具体的城市，例如：\"北京\"\n          map: this.map,\n          panel: \"panel\",\n          autoFitView: true\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    search() {\n      // 执行地点搜索\n      if (this.placeSearch) {\n        this.placeSearch.search(this.searchKeyword);\n      } else {\n        console.error(\"PlaceSearch对象未初始化！\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["AMapLoader","name","data","searchKeyword","map","placeSearch","mounted","initAMap","unmounted","destroy","methods","default","load","key","version","plugins","then","AMap","Map","resizeEnable","PlaceSearch","pageSize","pageIndex","city","panel","autoFitView","catch","e","console","log","search","error"],"sources":["src/views/Map.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"container\"></div>\r\n    <input type=\"text\" v-model=\"searchKeyword\" placeholder=\"请输入要搜索的地点\">\r\n    <button @click=\"search\">搜索</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\r\n\r\nexport default {\r\n  name: \"map-view\",\r\n  data() {\r\n    return {\r\n      searchKeyword: \"\", // 用于存储搜索关键字\r\n      map: null, // 地图对象\r\n      placeSearch: null, // 地点搜索对象\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initAMap();\r\n  },\r\n  unmounted() {\r\n    this.map?.destroy();\r\n  },\r\n  methods: {\r\n    async initAMap() {\r\n      const { default: AMapLoader } = await import(\"@amap/amap-jsapi-loader\");\r\n\r\n      AMapLoader.load({\r\n        key: \"f34b8d5f4cbdb16a9f986dcb3b35da8a\",\r\n        version: \"2.0\",\r\n        plugins: [\"AMap.PlaceSearch\"],\r\n      })\r\n          .then((AMap) => {\r\n            this.map = new AMap.Map(\"container\", {\r\n              resizeEnable: true\r\n            });\r\n\r\n            // 初始化地点搜索对象\r\n            this.placeSearch = new AMap.PlaceSearch({\r\n              pageSize: 5,\r\n              pageIndex: 1,\r\n              city: \"全国\", // 可以设置为具体的城市，例如：\"北京\"\r\n              map: this.map,\r\n              panel: \"panel\",\r\n              autoFitView: true\r\n            });\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n    },\r\n    search() {\r\n      // 执行地点搜索\r\n      if (this.placeSearch) {\r\n        this.placeSearch.search(this.searchKeyword);\r\n      } else {\r\n        console.error(\"PlaceSearch对象未初始化！\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#container {\r\n  width: 100%;\r\n  height: 800px;\r\n}\r\n</style>\r\n"],"mappings":"AASA,OAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,aAAA;MAAA;MACAC,GAAA;MAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA;EACA;EACAC,UAAA;IACA,KAAAJ,GAAA,EAAAK,OAAA;EACA;EACAC,OAAA;IACA,MAAAH,SAAA;MACA;QAAAI,OAAA,EAAAX;MAAA;MAEAA,UAAA,CAAAY,IAAA;QACAC,GAAA;QACAC,OAAA;QACAC,OAAA;MACA,GACAC,IAAA,CAAAC,IAAA;QACA,KAAAb,GAAA,OAAAa,IAAA,CAAAC,GAAA;UACAC,YAAA;QACA;;QAEA;QACA,KAAAd,WAAA,OAAAY,IAAA,CAAAG,WAAA;UACAC,QAAA;UACAC,SAAA;UACAC,IAAA;UAAA;UACAnB,GAAA,OAAAA,GAAA;UACAoB,KAAA;UACAC,WAAA;QACA;MACA,GACAC,KAAA,CAAAC,CAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,CAAA;MACA;IACA;IACAG,OAAA;MACA;MACA,SAAAzB,WAAA;QACA,KAAAA,WAAA,CAAAyB,MAAA,MAAA3B,aAAA;MACA;QACAyB,OAAA,CAAAG,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}