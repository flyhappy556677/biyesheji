{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'opratedrone',\n  data() {\n    return {\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      form: {},\n      time: 0,\n      // 时间，单位秒\n      timer: null,\n      // 定时器变量\n      score: 0,\n      height: 0,\n      speed: 0,\n      distance: 0,\n      startTime: null,\n      // 记录开始时间\n      startDistance: 0,\n      // 记录开始距离\n      endTime: null,\n      // 记录结束时间\n      endDistance: 0,\n      // 记录结束距离\n      rules: {} // 添加 rules 属性\n    };\n  },\n  created() {\n    this.load();\n  },\n  computed: {\n    formattedTime() {\n      // 将秒数格式化为 HH:mm:ss\n      const hours = Math.floor(this.time / 3600);\n      const minutes = Math.floor(this.time % 3600 / 60);\n      const seconds = this.time % 60;\n      return `${this.pad(hours)}:${this.pad(minutes)}:${this.pad(seconds)}`;\n    },\n    formattedDistance() {\n      return this.distance.toFixed(2);\n    }\n  },\n  beforeDestroy() {\n    this.stopTimer();\n  },\n  methods: {\n    load() {\n      const id = this.$route.query.id;\n      this.request.get(\"/buyorder/\" + id).then(res => {\n        this.form = res.data;\n        console.log(res.data);\n      });\n    },\n    startTimer() {\n      if (this.height < 5) {\n        this.$notify.error('飞机必须达到5米的上升高度才能起飞');\n        return;\n      }\n      // 记录开始时间和距离\n      this.startTime = new Date();\n      this.startDistance = this.distance;\n\n      // 启动计时器\n      this.timer = setInterval(() => {\n        this.time++;\n        this.updateDistance(); // 更新飞行距离\n      }, 1000);\n    },\n    stopTimer() {\n      // 记录结束时间和距离\n      this.endTime = new Date();\n      this.endDistance = this.distance;\n\n      // 停止计时器\n      clearInterval(this.timer);\n    },\n    resetTimer() {\n      // 重置计时器\n      this.time = 0;\n    },\n    pad(value) {\n      // 在个位数前面补零\n      return value < 10 ? `0${value}` : value;\n    },\n    updateDistance() {\n      // 根据当前时间、速度和开始/结束时间/距离计算飞行距离\n      const currentTime = new Date();\n      const timeDiff = (currentTime - this.startTime) / 1000; // 转换为秒\n      const speeds = this.speed || 0; // 速度\n      const distanceDiff = speeds * timeDiff / 60; // 每次计时器递增的距离增量\n\n      // 更新飞行距离\n      this.distance = this.startDistance + distanceDiff;\n      console.log(this.distance);\n    },\n    handleChangeHeight(value) {\n      console.log(value);\n    },\n    handleChangeSpeed(value) {\n      console.log(value);\n    },\n    save() {\n      this.form.distance = this.distance.toFixed(2);\n      this.form.operateTime = this.formattedTime;\n      this.form.height = this.height;\n      this.form.speed = this.speed;\n\n      //新的路程\n      this.form.usescore = this.form.usescore - this.form.distance;\n\n      // 格式化日期为需要的格式\n      if (this.form.height === 0 && this.form.speed === 0) {\n        this.request.post('/operate/save', {\n          ...this.form,\n          orderId: this.$route.query.id\n        }).then(res => {\n          console.log(this.form);\n          if (res.code === '200') {\n            this.$notify.success('更新成功');\n          } else {\n            this.$notify.error(res.msg);\n          }\n        }), request.put('/order/scoreupdate', this.form).then(res => {\n          console.log(this.form);\n          if (res.code === '200') {\n            this.$notify.success('更新成功');\n            this.$router.push(\"/opratelist\");\n          } else {\n            this.$notify.error(res.msg);\n          }\n        });\n      } else {\n        // 提示用户飞行高度和速度必须为 0，且处于停止飞行状态\n        this.$notify.error('飞行高度和速度必须为 0,且处于停止飞行状态');\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","localStorage","getItem","JSON","parse","form","time","timer","score","height","speed","distance","startTime","startDistance","endTime","endDistance","rules","created","load","computed","formattedTime","hours","Math","floor","minutes","seconds","pad","formattedDistance","toFixed","beforeDestroy","stopTimer","methods","id","$route","query","request","get","then","res","console","log","startTimer","$notify","error","Date","setInterval","updateDistance","clearInterval","resetTimer","value","currentTime","timeDiff","speeds","distanceDiff","handleChangeHeight","handleChangeSpeed","save","operateTime","usescore","post","orderId","code","success","msg","put","$router","push"],"sources":["src/views/Operatedrone.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\" :inline=\"true\" style=\"width: 70%\" label-width=\"100px\">\r\n\r\n      <el-form-item label=\"操作用户\" prop=\"userName\">\r\n        <el-input v-model=\"form.userName\" placeholder=\"请输入无人机名称\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"无人机名字\" prop=\"droneName\">\r\n        <el-input v-model=\"form.droneName\" placeholder=\"请输入无人机名字\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"操作地址\" prop=\"departureaddress\">\r\n        <el-input style=\"width:400px\" v-model=\"form.departureaddress\"  placeholder=\"请输入描述\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"飞行高度\" prop=\"height\">\r\n        <el-input style=\"width:400px\" disabled v-model=\"height\" placeholder=\"飞行高度\"></el-input>\r\n        <el-input-number v-model=\"height\"  :step=\"5\" :min=\"0\" :max=\"200\" label=\"飞行高度\"></el-input-number>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"飞行速度\" prop=\"speed\">\r\n        <el-input style=\"width:400px\" disabled v-model=\"speed\" placeholder=\"飞行速度\"></el-input>\r\n        <el-input-number v-model=\"speed\"  :step=\"4\" :min=\"0\" :max=\"50\" label=\"飞行速度\"></el-input-number>\r\n      </el-form-item>\r\n\r\n      <div style=\"text-align:center; margin-top: 30px;\">\r\n        <el-button type=\"primary\" @click=\"save\">提交</el-button>\r\n        <el-button type=\"danger\">取消</el-button>\r\n      </div>\r\n\r\n      <div>\r\n        <p>计时器: {{ formattedTime }}</p>\r\n        <p>飞行距离: {{ formattedDistance }} 公里</p>\r\n      </div>\r\n\r\n      <el-button type=\"primary\" @click=\"startTimer\">开始飞行前进速度</el-button>\r\n      <el-button type=\"primary\" @click=\"stopTimer\">停止飞行前进速度</el-button>\r\n    </el-form>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name:'opratedrone',\r\n  data(){\r\n    return{\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      form:{},\r\n      time: 0, // 时间，单位秒\r\n      timer: null, // 定时器变量\r\n      score:0,\r\n      height:0,\r\n      speed:0,\r\n      distance:0,\r\n      startTime: null, // 记录开始时间\r\n      startDistance: 0, // 记录开始距离\r\n      endTime: null, // 记录结束时间\r\n      endDistance: 0, // 记录结束距离\r\n      rules: {},  // 添加 rules 属性\r\n\r\n    }\r\n  },\r\n\r\n\r\n  created(){\r\n      this.load()\r\n  },\r\n\r\n\r\n  computed: {\r\n    formattedTime() {\r\n      // 将秒数格式化为 HH:mm:ss\r\n      const hours = Math.floor(this.time / 3600);\r\n      const minutes = Math.floor((this.time % 3600) / 60);\r\n      const seconds = this.time % 60;\r\n\r\n      return `${this.pad(hours)}:${this.pad(minutes)}:${this.pad(seconds)}`;\r\n    },\r\n\r\n    formattedDistance() {\r\n      return this.distance.toFixed(2);\r\n    }\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.stopTimer();\r\n  },\r\n\r\n  methods:{\r\n    load(){\r\n      const id=this.$route.query.id\r\n      this.request.get(\"/buyorder/\"+id).then(res =>{\r\n        this.form=res.data\r\n        console.log(res.data)\r\n      })\r\n    },\r\n\r\n    startTimer() {\r\n      if (this.height < 5  ) {\r\n        this.$notify.error('飞机必须达到5米的上升高度才能起飞');\r\n        return ;\r\n      }\r\n      // 记录开始时间和距离\r\n      this.startTime = new Date();\r\n      this.startDistance = this.distance;\r\n\r\n      // 启动计时器\r\n      this.timer = setInterval(() => {\r\n        this.time++;\r\n        this.updateDistance(); // 更新飞行距离\r\n      }, 1000);\r\n    },\r\n    stopTimer() {\r\n      // 记录结束时间和距离\r\n      this.endTime = new Date();\r\n      this.endDistance = this.distance;\r\n\r\n      // 停止计时器\r\n      clearInterval(this.timer);\r\n    },\r\n    resetTimer() {\r\n      // 重置计时器\r\n      this.time = 0;\r\n    },\r\n    pad(value) {\r\n      // 在个位数前面补零\r\n      return value < 10 ? `0${value}` : value;\r\n    },\r\n\r\n    updateDistance() {\r\n      // 根据当前时间、速度和开始/结束时间/距离计算飞行距离\r\n      const currentTime = new Date();\r\n      const timeDiff = (currentTime - this.startTime) / 1000; // 转换为秒\r\n      const speeds = this.speed || 0; // 速度\r\n      const distanceDiff = speeds * timeDiff / 60; // 每次计时器递增的距离增量\r\n\r\n      // 更新飞行距离\r\n      this.distance = this.startDistance + distanceDiff;\r\n      console.log(this.distance)\r\n    },\r\n\r\n    handleChangeHeight(value) {\r\n      console.log(value);\r\n    },\r\n\r\n    handleChangeSpeed(value) {\r\n      console.log(value);\r\n    },\r\n\r\n    save(){\r\n\r\n      this.form.distance = this.distance.toFixed(2);\r\n      this.form.operateTime = this.formattedTime;\r\n\r\n      this.form.height = this.height;\r\n      this.form.speed = this.speed;\r\n\r\n      //新的路程\r\n      this.form.usescore=this.form.usescore-this.form.distance\r\n\r\n      // 格式化日期为需要的格式\r\n      if (this.form.height === 0 && this.form.speed === 0 ) {\r\n        this.request.post('/operate/save',{...this.form,orderId:this.$route.query.id\r\n        }).then(res =>{\r\n          console.log(this.form)\r\n          if(res.code ==='200'){\r\n            this.$notify.success('更新成功')\r\n          }else{\r\n            this.$notify.error(res.msg)\r\n\r\n          }\r\n        }),\r\n\r\n\r\n            request.put('/order/scoreupdate',this.form).then(res =>{\r\n              console.log(this.form)\r\n              if(res.code ==='200'){\r\n                this.$notify.success('更新成功')\r\n                this.$router.push(\"/opratelist\")\r\n              }else{\r\n                this.$notify.error(res.msg)\r\n\r\n              }\r\n            })\r\n      }\r\n      else {\r\n        // 提示用户飞行高度和速度必须为 0，且处于停止飞行状态\r\n        this.$notify.error('飞行高度和速度必须为 0,且处于停止飞行状态');\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}