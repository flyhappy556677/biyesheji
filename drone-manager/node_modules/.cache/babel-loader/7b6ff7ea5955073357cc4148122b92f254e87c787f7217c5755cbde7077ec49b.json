{"ast":null,"code":"export default {\n  name: \"User\",\n  data() {\n    return {\n      tableData: [],\n      total: 0,\n      pageNum: 1,\n      pageSize: 8,\n      name: \"\",\n      form: {},\n      multipleSelection: [],\n      outerVisible: false,\n      menuDialogVisible: false,\n      menu: [],\n      props: {\n        label: 'name'\n      },\n      expends: [],\n      checks: [],\n      roleId: 0,\n      roleFlag: ''\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      this.request.get(\"/role/page\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        console.log(res);\n        this.tableData = res.data.records;\n        this.total = res.data.total;\n      });\n    },\n    handleCheckChange(data, checked, indeterminate) {\n      console.log(data, checked, indeterminate);\n    },\n    hanleEdit(row) {\n      this.form = row;\n      this.outerVisible = true;\n    },\n    handleAdd() {\n      this.outerVisible = true, this.form = {};\n    },\n    del(id) {\n      this.request.delete(\"/role/\" + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      });\n    },\n    save() {\n      this.request.post(\"/role\", this.form).then(res => {\n        if (res.data) {\n          this.$message.success(\"保存成功\");\n          this.outerVisible = false;\n          this.load();\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      });\n    },\n    saveRoleMenu() {\n      this.request.post(\"/role/roleMenu/\" + this.roleId, this.$refs.tree.getCheckedKeys()).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"绑定成功\");\n          this.menuDialogVisible = false;\n          //操作完管理员角色需要重新登录\n          if (this.roleFalg === 'ROLE_ADMIN') {\n            this.$store.commit(\"Logout\");\n          }\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    reset() {\n      this.name = '', this.load();\n    },\n    handleSelectionChange(val) {\n      console.log(val);\n      this.multipleSelection = val;\n    },\n    delBatch() {\n      let ids = this.multipleSelection.map(v => v.id); //变为集合数组\n\n      this.request.post(\"/role/del/batch\", ids).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"批量删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"批量删除失败\");\n        }\n      });\n    },\n    handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.load();\n    },\n    handleCurrentChange(pageNum) {\n      this.pageNum = pageNum;\n      this.load();\n    },\n    selectMenu(role) {\n      this.menuDialogVisible = true;\n      this.roleId = role.id;\n      this.roleFalg = role.flag;\n      //重置checks数组\n      this.checks = [];\n      //请求菜单数据\n      this.request.get(\"/menu\").then(res => {\n        this.menuData = res.data;\n\n        //把后台返回的菜单数据处理成id数组\n        this.expends = this.menuData.map(v => v.id);\n      });\n      this.request.get(\"/role/roleMenu/\" + this.roleId).then(res => {\n        console.log(res.data);\n        this.checks = res.data;\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","total","pageNum","pageSize","form","multipleSelection","outerVisible","menuDialogVisible","menu","props","label","expends","checks","roleId","roleFlag","created","load","methods","request","get","params","then","res","console","log","records","handleCheckChange","checked","indeterminate","hanleEdit","row","handleAdd","del","id","delete","code","$message","success","error","save","post","saveRoleMenu","$refs","tree","getCheckedKeys","roleFalg","$store","commit","msg","reset","handleSelectionChange","val","delBatch","ids","map","v","handleSizeChange","handleCurrentChange","selectMenu","role","flag","menuData"],"sources":["src/views/Role.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <div style=\"padding: 10px 0\">\r\n      <el-input style=\"width: 200px\" placeholder=\"请输入名称\" suffix-icon=\"el-icon-search\" v-model=\"name\"></el-input>\r\n\r\n      <el-button class=\"ml-5\" type=\"primary\" @click=\"load\">搜索</el-button>\r\n      <el-button class=\"ml-5\" type=\"warning\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div style=\"margin: 10px 0\">\r\n      <el-button  type=\"primary\" @click=\"handleAdd\">新增<i class=\"el-icon-circle-plus-outline\"></i></el-button>\r\n\r\n      <el-popconfirm\r\n          class=\"ml-5\"\r\n          confirm-button-text='确定'\r\n          cancel-button-text='我在想想'\r\n          icon=\"el-icon-info\"\r\n          icon-color=\"red\"\r\n          title=\"您确定删除吗？\"\r\n          @confirm= \"delBatch\"\r\n      >\r\n        <el-button  type=\"danger\" slot=\"reference\">批量删除<i class=\"el-icon-remove-outline\"></i></el-button>\r\n      </el-popconfirm>\r\n\r\n<!--      <el-upload action=\"http://localhost:9090/user/import\" :show-file-list=\"false\"  accept=\"xlsx\" :on-success=\"handleImportSuccess\" style=\"display: inline-block\">\r\n        <el-button  type=\"primary\" class=\"ml-5\">导入<i class=\"el-icon-bottom\"></i></el-button>\r\n      </el-upload>\r\n\r\n      <el-button  type=\"primary\" class=\"ml-5\" @click=\"exp\">导出<i class=\"el-icon-top\"></i></el-button>-->\r\n    </div>\r\n\r\n\r\n    <el-table :data=\"tableData\" border stripe :header-cell-class-name=\"headerBg\" @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"80\"></el-table-column>\r\n      <el-table-column prop=\"id\" label=\"ID\" ></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"名称\" ></el-table-column>\r\n      <el-table-column prop=\"flag\" label=\"唯一标识\" ></el-table-column>\r\n      <el-table-column prop=\"description\" label=\"描述\" ></el-table-column>\r\n\r\n      <el-table-column label=\"操作\" width=\"400pxs\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"info\" @click=\"selectMenu(scope.row)\">分配菜单 <i class=\"el-icon-menu\"></i></el-button>\r\n          <el-button type=\"success\" @click=\"hanleEdit(scope.row)\">编辑 <i class=\"el-icon-edit\"></i></el-button>\r\n          <el-popconfirm\r\n              class=\"ml-5\"\r\n              confirm-button-text='确定'\r\n              cancel-button-text='我在想想'\r\n              icon=\"el-icon-info\"\r\n              icon-color=\"red\"\r\n              title=\"您确定删除吗？\"\r\n              @confirm=\"del(scope.row.id)\"\r\n          >\r\n            <el-button type=\"danger\" slot=\"reference\">删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n          </el-popconfirm>\r\n\r\n        </template>\r\n      </el-table-column>\r\n\r\n    </el-table>\r\n    <div style=\"padding: 10px 0\">\r\n      <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"pageNum\"\r\n          :page-sizes=\"[8, 10, 15, 20]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\">\r\n      </el-pagination>\r\n\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"角色信息\" :visible.sync=\"outerVisible\" width=\"30%\">\r\n      <el-form label-width=\"80px\" size=\"smail\">\r\n        <el-form-item label=\"名称\">\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"唯一标识\">\r\n          <el-input v-model=\"form.flag\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"form.description\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"outerVisible = false\">取 消</el-button>\r\n        <el-button @click=\"save\">提交</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"菜单分配\" :visible.sync=\"menuDialogVisible\" width=\"30%\" style=\"padding: 0 30px\">\r\n      <el-tree\r\n          :props=\"props\"\r\n          :data=\"menuData\"\r\n          show-checkbox\r\n          node-key=\"id\"\r\n          ref=\"tree\"\r\n          :default-checked-keys=\"checks\"\r\n          :default-expanded-keys=\"expends\"\r\n          >\r\n        <span class=\"custom-tree-node\" slot-scope=\"{node ,data}\">\r\n          <span><i :class=\"data.icon\"/> {{data.name}}</span>\r\n        </span>\r\n      </el-tree>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"menuDialogVisible = false\">取 消</el-button>\r\n        <el-button @click=\"saveRoleMenu\">提交</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n<script >\r\nexport  default {\r\n  name:\"User\",\r\n  data(){\r\n    return{\r\n      tableData: [],\r\n      total:0,\r\n      pageNum:1,\r\n      pageSize:8,\r\n      name:\"\",\r\n      form:{},\r\n      multipleSelection:[],\r\n      outerVisible: false,\r\n      menuDialogVisible:false,\r\n      menu:[],\r\n      props:{\r\n        label:'name',\r\n      },\r\n      expends:[],\r\n      checks:[],\r\n      roleId:0,\r\n      roleFlag:''\r\n    }\r\n  },\r\n  created() {\r\n    this.load()\r\n  },\r\n  methods:{\r\n    load(){\r\n      this.request.get(\"/role/page\",{\r\n        params:{\r\n          pageNum:this.pageNum,\r\n          pageSize:this.pageSize,\r\n          name:this.name,\r\n        }\r\n      })\r\n          .then(res =>{\r\n            console.log(res)\r\n\r\n            this.tableData =res.data.records\r\n            this.total=res.data.total\r\n\r\n          })\r\n\r\n\r\n    },\r\n    handleCheckChange(data, checked, indeterminate) {\r\n      console.log(data, checked, indeterminate);\r\n    },\r\n    hanleEdit(row){\r\n      this.form=row\r\n      this.outerVisible=true\r\n    },\r\n    handleAdd(){\r\n      this.outerVisible =true,\r\n          this.form={}\r\n    },\r\n    del(id){\r\n      this.request.delete(\"/role/\" +id).then(res =>{\r\n        if(res.code === '200'){\r\n          this.$message.success(\"删除成功\")\r\n          this.load()\r\n        }else{\r\n          this.$message.error(\"删除失败\")\r\n        }\r\n      })\r\n    },\r\n    save(){\r\n      this.request.post(\"/role\",this.form).then(res =>{\r\n        if(res.data){\r\n          this.$message.success(\"保存成功\")\r\n          this.outerVisible=false\r\n          this.load()\r\n        }else{\r\n          this.$message.error(\"保存失败\")\r\n        }\r\n      })\r\n    },\r\n    saveRoleMenu(){\r\n      this.request.post(\"/role/roleMenu/\"+this.roleId,this.$refs.tree.getCheckedKeys()).then(res =>{\r\n            if(res.code === '200') {\r\n              this.$message.success(\"绑定成功\")\r\n              this.menuDialogVisible=false\r\n              //操作完管理员角色需要重新登录\r\n              if (this.roleFalg ==='ROLE_ADMIN'){\r\n                this.$store.commit(\"Logout\")\r\n              }\r\n\r\n            }else {\r\n              this.$message.error(res.msg)\r\n            }\r\n      })\r\n    },\r\n    reset(){\r\n      this.name ='',\r\n          this.load()\r\n\r\n    },\r\n    handleSelectionChange(val){\r\n      console.log(val)\r\n      this.multipleSelection=val\r\n    },\r\n    delBatch(){\r\n      let ids = this.multipleSelection.map(v => v.id)//变为集合数组\r\n\r\n      this.request.post(\"/role/del/batch\",ids).then(res =>{\r\n        if(res.code === '200'){\r\n          this.$message.success(\"批量删除成功\")\r\n          this.load()\r\n        }else{\r\n          this.$message.error(\"批量删除失败\")\r\n        }\r\n      })\r\n    },\r\n    handleSizeChange(pageSize){\r\n      this.pageSize=pageSize\r\n      this.load()\r\n\r\n    },\r\n    handleCurrentChange(pageNum){\r\n      this.pageNum=pageNum\r\n      this.load()\r\n    },\r\n    selectMenu(role){\r\n      this.menuDialogVisible=true\r\n      this.roleId =role.id\r\n      this.roleFalg =role.flag\r\n      //重置checks数组\r\n      this.checks = []\r\n      //请求菜单数据\r\n      this.request.get(\"/menu\").then(res =>{\r\n             this.menuData=res.data\r\n\r\n        //把后台返回的菜单数据处理成id数组\r\n        this.expends=this.menuData.map(v => v.id)\r\n          })\r\n\r\n      this.request.get(\"/role/roleMenu/\"+this.roleId).then(res =>{\r\n        console.log(res.data)\r\n          this.checks=res.data\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.headerBg{\r\n  background-color: #eee!important;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}